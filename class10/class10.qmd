---
title: "Class 10: Halloween Mini-Project"
author: "Kaitlyn Powell"
format: gfm
---

```{r}
library(webshot)
webshot::install_phantomjs()
```


## Background
Here we will analyze the  538 Candy data set in  order to  rank the top-ranked snack size Halloween candy. 

# 1. Importing candy data

Let's get the  data. I will  download  to my project  directory...

```{r}
candy_file <- "candy-data.csv"

candy = read.csv(candy_file, row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

There are 85 different candy types in this data set.

```{r}
nrow(candy)
```

> Q2. How many fruity candy types are in the dataset?

There are 38 fruity candy types in the data set.

```{r}
sum(candy$fruity)
```

# 2. What is your favorate candy?

##Winpercent
One of the most interesting variables in the dataset is winpercent. For a given candy this value is the percentage of people who prefer this candy over another randomly chosen candy.

```{r}
candy["Twix", ]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

My favorite candy in the dataset is Swedish Fish and it's winpercent is 54.86111%.

```{r}
rownames(candy)
```

```{r}
candy["Swedish Fish",]
```

> Q4. What is the winpercent value for “Kit Kat”?

The winpercent value for "Kit Kat" is 76.7686%.

```{r}
candy["Kit Kat",]
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

The winpercent value for "Tootsie Roll Snack Bars" is 49.6535%.

```{r}
candy["Tootsie Roll Snack Bars",]
```

## A useful function from the skimr package

Side-note: the `skimr::skim()` function is a useful package that can help give you a quick overview of a given data set. Let’s install this package and try it on our candy data.

```{r}
skimr::skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The winpercent variable seems to be on a different scale to the majority of the other columns in the data set. The values in this row appear to have much higher values than the other rows.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

I think that the zero in the `candy$chocolate` column means that a given candy (shown in the rows) is not chocolate. Alternatively, a one in the `candy$chocolate` column means that a given candy is chocolate.

> Q8. Plot a histogram of winpercent values

The histogram showing winpercent values is shown below:

```{r}
hist(candy$winpercent)
```

```{r}
library(ggplot2)

ggplot(candy) +
  aes(winpercent) +
  geom_histogram(bins = 10,  col="red", fill="orange")
```

> Q9. Is the distribution of winpercent values symmetrical?

The  distribution of the winpercent values does not appear to be symmetrical. It seems to be skewed  to the right.

> Q10. Is the center of the distribution above or below 50%?

The center of the distribution is  slightly above 50%.

mean(winpercent)
```{r}
mean(candy$winpercent)
```

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

On average, chocolate candy is ranked higher than fruity candy.

```{r}
chocolate.inds <- as.logical(candy$chocolate)
chocolate.wins <- candy[chocolate.inds,]$winpercent
mean(chocolate.wins)
```

```{r}
fruity.inds <- as.logical(candy$fruity)
fruity.wins <- candy[fruity.inds,]$winpercent
mean(fruity.wins)
```


> Q12. Is this difference statistically significant?

The difference is statistically significant, as shown by  having  such a  small p-value when conducting a t-test for chocolate and fruity candy.

```{r}
t.test(chocolate.wins, fruity.wins)
```

# 3. Overall Candy Rankings

Let’s use the base `R order()` function together with head() to sort the whole dataset by winpercent. 

> Q13. What are the five least liked candy types in this set?

The five least liked candy types in this set are Nik L Nip,  Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters.

```{r}
head(candy[order(candy$winpercent),], n=5)
```


> Q14. What are the top 5 all time favorite candy types out of this set?

The top five all time favorite candy types in this data set are Snickers, Kit Kat, Twix, ReeseOs Miniatures, and ReeseOs Peanut Butter cup.

```{r}
tail(candy[order(candy$winpercent),], n=5)
```

> Q15. Make a first barplot of candy ranking based on winpercent values.

The first barplot of candy ranking based on winpercent values is shown below:

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

The plot below shows the plot with the bars sorted by winpercent using the `reorder()` fucntion.

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```


First setup some colors for different candy types.

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
#my_cols
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

```{r}
ggsave("tmp.png")
```

Now, for the first time, using this plot we can answer questions like:

> Q17. What is the worst ranked chocolate candy?

The wosrt ranked chocolate candy is Sixlets.

> Q18. What is the best ranked fruity candy?

The best ranked fruity candy is Starburst.

# 4. Taking a look at pricepercent

What is the best (most liked in terms of `winpercent`) for the money (in terms of `pricepercent`)?

To answer this I will make a plot of winpercent vs pricepercent.

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```


> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

ReeseOs Miniatures are the highest raned in terms of winpercent for the least money, they offer the most bang for your buck.

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

The top five most expensive candy types in the data set are Nik L Nip, Nestle Smarties, Ring pop, HersheyOs Krackel, HersheyOs Milk Chocolate. The least popular of these candies is Nik L Nip.

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

> Q21. Make a barplot again with geom_col() this time using pricepercent and then improve this step by step, first ordering the x-axis by value and finally making a so called “dot chat” or “lollipop” chart by swapping geom_col() for geom_point() + geom_segment().

The barplot with the features mentioned in the question is shown below:

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(pricepercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```

```{r}
# Make a lollipop chart of pricepercent
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

# 5. Exploring the correlation structure

Now that we’ve explored the dataset a little, we’ll see how the variables interact with one another. We’ll use correlation and view the results with the corrplot package to plot a correlation matrix.

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

The two variables that are anti-correlated are chocolate and fruity.

> Q23. Similarly, what two variables are most positively correlated?

The two variables that are most positively correlated are winpercent and chocolate.

# 6. Principal Component Analysis

Let’s apply PCA using the `prcom()` function to our candy dataset remembering to set the `scale=TRUE` argument.

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

Now we can plot our main PCA score plot of PC1 vs PC2.

```{r}
plot(pca$x[,1:2])
```

We can change the plotting character and add some color:

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

## Make a new data-frame with our PCA results and candy data

```{r}
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

more candy labels you can change the `max.overlaps` value to allow more overlapping labels or pass the ggplot object p to plotly like so to generate an interactive plot that you can mouse over to see labels:

```{r}
library(plotly)
```

```{r}
ggplotly(p)
```

Let’s finish by taking a quick look at PCA our loadings. 

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

The original variables that are picked up strongly by PC1 in the positive direction are fruity, hard, and pluribus. This does make sense since most fruity candies possess the characteristics of being hard and pluribus.